create database BANK
USE BANK

CREATE TABLE DISTRICT(
District_Code INT PRIMARY KEY,
District_Name VARCHAR(100)	,
Region VARCHAR(100)	,
No_of_inhabitants	INT,
No_of_municipalities_with_inhabitants_less_499 INT,
No_of_municipalities_with_inhabitants_500_btw_1999	INT,
No_of_municipalities_with_inhabitants_2000_btw_9999	INT,
No_of_municipalities_with_inhabitants_less_10000 INT,	
No_of_cities	INT,
Ratio_of_urban_inhabitants	FLOAT,
Average_salary	INT,
No_of_entrepreneurs_per_1000_inhabitants	INT,
No_committed_crime_2017	INT,
No_committed_crime_2018 INT
) ;

CREATE TABLE ACCOUNT(
account_id INT PRIMARY KEY,
district_id	INT,
frequency	VARCHAR(40),
`Date` DATE,
Account_type VARCHAR(40),
Card_Assigned VARCHAR(40),
FOREIGN KEY (district_id) references DISTRICT(District_Code) 
);
DROP TABLE ACCOUNT
CREATE TABLE `ORDER`(
order_id	INT PRIMARY KEY,
account_id	INT,
bank_to	VARCHAR(45),
account_to	INT,
amount FLOAT,
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);



CREATE TABLE LOAN(
loan_id	INT,
account_id	INT,
`Date`	DATE,
amount	INT,
duration	INT,
payments	INT,
`status` VARCHAR(35),
FOREIGN KEY (account_id) references ACCOUNT(account_id)
);

CREATE TABLE TRANSACTIONS(
trans_id INT,	
account_id	INT,
`Date`	DATE,
`Type`	VARCHAR(30),
operation	VARCHAR(40),
amount	INT,
balance	FLOAT,
Purpose	VARCHAR(40),
bank	VARCHAR(45),
`account` INT,
FOREIGN KEY (account_id) references ACCOUNT(account_id));

CREATE TABLE CLIENT(
client_id	INT PRIMARY KEY,
Sex	CHAR(10),
Birth_date	DATE,
district_id INT,
FOREIGN KEY (district_id) references DISTRICT(District_Code) 
);

CREATE TABLE DISPOSITION(
disp_id	INT PRIMARY KEY,
client_id INT,
account_id	INT,
`type` CHAR(15),
FOREIGN KEY (account_id) references ACCOUNT(account_id),
FOREIGN KEY (client_id) references CLIENT(client_id)
);

CREATE TABLE CARD(
card_id	INT PRIMARY KEY,
disp_id	INT,
`type` CHAR(10)	,
issued DATE,
FOREIGN KEY (disp_id) references DISPOSITION(disp_id)
);

--##Creating Cloud Storage Integration in Snowflake and mapping S3 user/role 

CREATE OR REPLACE STORAGE INTEGRATION s3_bank
TYPE = external_stage
STORAGE_PROVIDER = s3
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::904842120102:role/bankczech_role'
ENABLED = true
STORAGE_ALLOWED_LOCATIONS = ('s3://bankczech/');

desc INTEGRATION s3_bank;

--##creating a stage in Snowflake pointing to s3 bucket

CREATE FILE FORMAT csv
  TYPE = 'CSV'
  FIELD_DELIMITER = ','
  SKIP_HEADER = 1
  NULL_IF = ('NULL');

  
create or replace STAGE czechbank
URL = 's3://bankczech/'
--CREDENTIALS = (AWS_KEY_ID =)
file_format = csv
storage_integration = s3_bank;

list @czechbank

SHOW STAGES;

--CREATE A SNOW PIPE THAT RECOGNISES CSV THAT ARE INGESTED FROM THE EXTERNAL STAGE AND COPIES THE DATA INTO TABLE
--The AUTO_INGEST=true parameter specifies to read event notifications sent from an S3 bucket to an SQS queue when new data is ready to load.

CREATE OR REPLACE STAGE bank_stage
  URL = 's3://bankczech/'
  CREDENTIALS = (
    AWS_ROLE = 'arn:aws:iam::904842120102:role/bankczech_role'
  );

 CREATE OR REPLACE PIPE BANK_SNOWPIPE_DISTRICT
  AUTO_INGEST = TRUE
AS
COPY INTO "BANK"."PUBLIC"."DISTRICT"
FROM '@bank_stage/district/'
FILE_FORMAT = CSV;

SHOW PIPES;

--PIPE FOR ACCOUNT
  CREATE OR REPLACE PIPE BANK_SNOWPIPE_ACCOUNT
  AUTO_INGEST = TRUE
AS
COPY INTO "BANK"."PUBLIC"."ACCOUNT"
FROM '@bank_stage/account/'
FILE_FORMAT = CSV;

--PIPE FOR ORDER

 CREATE OR REPLACE PIPE BANK_SNOWPIPE_ORDER
  AUTO_INGEST = TRUE
AS
COPY INTO "BANK"."PUBLIC"."`ORDER`"
FROM '@bank_stage/order/'
FILE_FORMAT = CSV;

--pipe for transactions

 CREATE OR REPLACE PIPE BANK_SNOWPIPE_TRANSACTIONS
  AUTO_INGEST = TRUE
AS
COPY INTO "BANK"."PUBLIC"."TRANSACTIONS"
FROM '@bank_stage/trnx/'
FILE_FORMAT = CSV;

--pipe for client

CREATE OR REPLACE PIPE BANK_SNOWPIPE_CLIENT
  AUTO_INGEST = TRUE
   AS
  COPY INTO  "BANK"."PUBLIC"."CLIENT"
FROM '@bank_stage/client/'
FILE_FORMAT = CSV
   
--PIPE FOR DISPOSITION

CREATE OR REPLACE PIPE BANK_SNOWPIPE_DISPOSITION
  AUTO_INGEST = TRUE
   AS
  COPY INTO  "BANK"."PUBLIC"."DISPOSITION"
FROM '@bank_stage/disp/'
FILE_FORMAT = CSV

--pipe FOR CARD
CREATE OR REPLACE PIPE BANK_SNOWPIPE_CARD
  AUTO_INGEST = TRUE
   AS
  COPY INTO  "BANK"."PUBLIC"."CARD"
FROM '@bank_stage/card/'
FILE_FORMAT = CSV

SHOW PIPES;
-- PIPE FOR LOAN
CREATE OR REPLACE PIPE BANK_SNOWPIPE_LOAN
  AUTO_INGEST = TRUE
   AS
  COPY INTO  "BANK"."PUBLIC"."LOAN"
FROM '@bank_stage/loan/'
FILE_FORMAT = CSV

SHOW PIPES;

----------------------------------------------------------------------------------------------------------------------------------
ALTER PIPE BANK_SNOWPIPE_DISTRICT REFRESH;
ALTER PIPE BANK_SNOWPIPE_ACCOUNT  REFRESH;
ALTER PIPE BANK_SNOWPIPE_ORDER  REFRESH;
ALTER PIPE BANK_SNOWPIPE_LOAN  REFRESH;
ALTER PIPE BANK_SNOWPIPE_CARD  REFRESH;
ALTER PIPE BANK_SNOWPIPE_CLIENT  REFRESH;
ALTER PIPE BANK_SNOWPIPE_DISPOSITION  REFRESH;
ALTER PIPE BANK_SNOWPIPE_TRANSACTIONS  REFRESH
